1 Retrieve the total number of orders placed
SELECT COUNT(DISTINCT order_id) AS total_orders
FROM orders;

2️ Calculate the total revenue generated from pizza sales
sql
Copy
Edit
SELECT ROUND(SUM(od.quantity * p.price), 2) AS total_revenue
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id;

3️ Identify the highest-priced pizza
sql
Copy
Edit
SELECT pizza_id, price
FROM pizzas
ORDER BY price DESC
LIMIT 1;

4️ Identify the most common pizza size ordered
sql
Copy
Edit
SELECT p.size, SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
GROUP BY p.size
ORDER BY total_quantity DESC
LIMIT 1;

5️ List the top 5 most ordered pizza types along with their total quantities
sql
Copy
Edit
SELECT pt.name AS pizza_type, SUM(od.quantity) AS total_quantity
FROM order_details od


6 Join the necessary tables to find the total quantity of each pizza category ordered
sql
Copy
Edit
SELECT pt.category, SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category
ORDER BY total_quantity DESC;

7.Determine the distribution of orders by hour of the day
sql
Copy
Edit
SELECT EXTRACT(HOUR FROM TIME(time)) AS order_hour, COUNT(*) AS order_count
FROM orders
GROUP BY order_hour
ORDER BY order_hour;
 If EXTRACT(HOUR FROM TIME(...)) doesn’t work in your SQL engine (e.g. SQLite), use a string function to extract the hour part:

sql
Copy
Edit
-- For SQLite
SELECT SUBSTR(time, 1, 2) AS order_hour, COUNT(*) AS order_count
FROM orders
GROUP BY order_hour
ORDER BY order_hour;
8. Join relevant tables to find the category-wise distribution of pizzas
sql
Copy
Edit
SELECT pt.category, COUNT(DISTINCT p.pizza_id) AS total_pizzas
FROM pizzas p
JOIN pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category
ORDER BY total_pizzas DESC;
9. Group the orders by date and calculate the average number of pizzas ordered per day
sql
Copy
Edit
SELECT AVG(daily_quantity) AS avg_pizzas_per_day
FROM (
    SELECT o.date, SUM(od.quantity) AS daily_quantity
    FROM orders o
    JOIN order_details od ON o.order_id = od.order_id
    GROUP BY o.date
) AS daily_stats;
10. Determine the top 3 most ordered pizza types based on revenue
sql
Copy
Edit
SELECT pt.name AS pizza_type, ROUND(SUM(od.quantity * p.price), 2) AS total_revenue
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_revenue DESC
LIMIT 3;

JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_quantity DESC
LIMIT 5;
